# ==============================
# MULTI-STAGE DOCKERFILE STREAMLIT
# WhatsApp Agent Dashboard v2.0
# ==============================

# Stage 1: Builder - Dependencies compilation
FROM python:3.11-slim as builder

# OtimizaÃ§Ãµes de build
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Instalar dependÃªncias de build
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    pkg-config \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Instalar dependÃªncias Python
COPY requirements.txt .
RUN pip install --upgrade pip wheel setuptools
RUN pip install --user --no-warn-script-location -r requirements.txt

# DependÃªncias especÃ­ficas do Streamlit
RUN pip install --user --no-warn-script-location \
    streamlit==1.39.0 \
    plotly==5.17.0 \
    pandas>=2.2.0 \
    altair \
    pillow

# Copiar e compilar cÃ³digo
COPY . .
RUN python -m compileall . -q

# ==============================
# Stage 2: Runtime - Streamlit optimized
FROM python:3.11-slim as runtime

# ðŸ”’ SEGURANÃ‡A: Criar usuÃ¡rio nÃ£o-root para Streamlit
RUN groupadd --gid 1001 streamlituser && \
    useradd --uid 1001 --gid streamlituser --shell /bin/bash --create-home streamlituser

# Metadados
LABEL maintainer="WhatsApp Agent Team"
LABEL version="2.0"
LABEL description="WhatsApp Agent Streamlit Dashboard - Optimized"

# Configurar timezone
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Runtime dependencies apenas
RUN apt-get update && apt-get install -y \
    libpq5 \
    postgresql-client \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Criar usuÃ¡rio otimizado
RUN groupadd -g 1002 streamlit && \
    useradd -r -u 1002 -g streamlit -d /home/streamlit -s /bin/bash streamlit && \
    mkdir -p /home/streamlit && \
    chown -R streamlit:streamlit /home/streamlit

WORKDIR /home/streamlit/app

# Copiar packages Python do builder
COPY --from=builder /root/.local /home/streamlit/.local
ENV PATH=/home/streamlit/.local/bin:$PATH

# ðŸ”’ SEGURANÃ‡A: Copiar aplicaÃ§Ã£o com usuÃ¡rio nÃ£o-root
COPY --from=builder --chown=streamlituser:streamlituser /app .

# ðŸ”’ SEGURANÃ‡A: Criar estrutura com permissÃµes seguras
RUN mkdir -p \
    logs/dashboard \
    config/streamlit \
    .streamlit \
    data/cache \
    && chown -R streamlituser:streamlituser logs config .streamlit data \
    && chmod -R 750 logs config .streamlit data

# ConfiguraÃ§Ã£o do Streamlit
RUN echo '[server]\n\
headless = true\n\
port = 8501\n\
address = "0.0.0.0"\n\
maxUploadSize = 200\n\
maxMessageSize = 200\n\
enableStaticServing = false\n\
\n\
[browser]\n\
gatherUsageStats = false\n\
\n\
[theme]\n\
primaryColor = "#25D366"\n\
backgroundColor = "#FFFFFF"\n\
secondaryBackgroundColor = "#F0F2F6"\n\
textColor = "#262730"\n\
\n\
[client]\n\
caching = true\n\
displayEnabled = true\n\
showErrorDetails = false' > .streamlit/config.toml

# VariÃ¡veis de ambiente otimizadas
ENV PYTHONPATH=/home/streamlituser/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV STREAMLIT_SERVER_HEADLESS=true
ENV STREAMLIT_SERVER_ENABLE_CORS=false
ENV STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true

# ðŸ”’ SEGURANÃ‡A: Configurar usuÃ¡rio nÃ£o-root
USER streamlituser

# Health check inteligente para Streamlit
HEALTHCHECK --interval=30s --timeout=10s --start-period=45s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || \
        python -c "import requests; requests.get('http://localhost:8501', timeout=8)" || exit 1

# Expor porta
EXPOSE 8501

# Signal handling
STOPSIGNAL SIGTERM

# Comando otimizado
CMD ["streamlit", "run", "dashboard_whatsapp_complete.py", \
     "--server.port=8501", \
     "--server.address=0.0.0.0", \
     "--server.headless=true", \
     "--server.enableCORS=false", \
     "--server.enableXsrfProtection=true", \
     "--browser.gatherUsageStats=false"]
