#!/bin/bash

# =========================================================================
# WHATSAPP AGENT - SCRIPT DE STATUS R√ÅPIDO
# =========================================================================
# Este script mostra um resumo r√°pido do status da aplica√ß√£o
# Criado em: 11 de Agosto de 2025
# Vers√£o: 1.0.0
# =========================================================================

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
WHITE='\033[1;37m'
NC='\033[0m'

# Banner r√°pido
echo -e "${BLUE}üîç WhatsApp Agent - Status R√°pido${NC}"
echo "=================================="

# Verificar containers
echo -e "${YELLOW}üì¶ Containers:${NC}"
if command -v docker-compose &> /dev/null; then
    if docker-compose ps | grep -q "Up"; then
        local running=$(docker-compose ps --services --filter "status=running" | wc -l)
        local total=$(docker-compose ps --services | wc -l)
        echo -e "   ${GREEN}‚úÖ $running/$total containers rodando${NC}"
    else
        echo -e "   ${RED}‚ùå Nenhum container rodando${NC}"
    fi
else
    echo -e "   ${RED}‚ùå Docker Compose n√£o encontrado${NC}"
fi

# Verificar servi√ßos principais
echo -e "${YELLOW}üåê Servi√ßos:${NC}"

# API Principal
if curl -s -o /dev/null --max-time 2 "http://localhost:8000/health" 2>/dev/null; then
    echo -e "   ${GREEN}‚úÖ API Principal (8000)${NC}"
else
    echo -e "   ${RED}‚ùå API Principal (8000)${NC}"
fi

# Dashboard
if curl -s -o /dev/null --max-time 2 "http://localhost:8501" 2>/dev/null; then
    echo -e "   ${GREEN}‚úÖ Dashboard (8501)${NC}"
else
    echo -e "   ${RED}‚ùå Dashboard (8501)${NC}"
fi

# PostgreSQL
if timeout 2 bash -c "cat < /dev/null > /dev/tcp/localhost/5432" 2>/dev/null; then
    echo -e "   ${GREEN}‚úÖ PostgreSQL (5432)${NC}"
else
    echo -e "   ${RED}‚ùå PostgreSQL (5432)${NC}"
fi

# Redis
if timeout 2 bash -c "cat < /dev/null > /dev/tcp/localhost/6379" 2>/dev/null; then
    echo -e "   ${GREEN}‚úÖ Redis (6379)${NC}"
else
    echo -e "   ${RED}‚ùå Redis (6379)${NC}"
fi

# Verificar logs de erro recentes
echo -e "${YELLOW}üìã Logs recentes:${NC}"
if docker-compose ps | grep -q "Up"; then
    local error_count=$(docker-compose logs --tail=50 2>/dev/null | grep -i error | wc -l || echo 0)
    if [[ $error_count -gt 0 ]]; then
        echo -e "   ${YELLOW}‚ö†Ô∏è  $error_count erros encontrados nos logs${NC}"
    else
        echo -e "   ${GREEN}‚úÖ Nenhum erro nos logs recentes${NC}"
    fi
else
    echo -e "   ${YELLOW}‚ö†Ô∏è  Containers n√£o rodando${NC}"
fi

# Comandos √∫teis
echo ""
echo -e "${BLUE}üîß Comandos √∫teis:${NC}"
echo "   ./scripts/start_complete_application.sh  # Iniciar tudo"
echo "   ./scripts/stop_complete_application.sh   # Parar tudo"
echo "   ./scripts/monitor_application.sh         # Monitor em tempo real"
echo "   docker-compose logs -f                   # Ver logs"

echo ""
