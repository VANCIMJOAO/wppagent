#!/usr/bin/env python3
"""
Limpar e popular banco Railway com dados de teste completos
"""

import asyncio
import asyncpg

DATABASE_URL = 'postgresql://postgres:UGARTPCwAADBBeBLctoRnQXLsoUvLJxz@caboose.proxy.rlwy.net:13910/railway'

async def clean_and_populate():
    """Limpar e popular banco com dados completos"""
    print("üßπ LIMPANDO E POPULANDO BANCO")
    print("=" * 50)
    
    try:
        conn = await asyncpg.connect(DATABASE_URL)
        print("‚úÖ Conectado ao banco Railway!")
        
        # ========================================
        # 1. LIMPAR DADOS EXISTENTES (em ordem de depend√™ncias)
        # ========================================
        print("\nüßπ Limpando dados existentes...")
        
        await conn.execute("DELETE FROM company_info")
        await conn.execute("DELETE FROM services") 
        await conn.execute("DELETE FROM businesses")
        
        print("‚úÖ Dados limpos!")
        
        # ========================================
        # 2. CRIAR BUSINESS E OBTER ID
        # ========================================
        print("\nüè™ Criando neg√≥cio...")
        
        business_id = await conn.fetchval('''
            INSERT INTO businesses (
                name, description, address, phone, email, business_hours,
                created_at, updated_at
            ) VALUES (
                $1, $2, $3, $4, $5, $6::json, now(), now()
            ) RETURNING id
        ''', 
        'Studio Beleza & Bem-Estar',
        'Est√∫dio completo de beleza e est√©tica especializado em tratamentos faciais, massagens, depila√ß√£o e cuidados corporais.',
        'Rua das Flores, 123 - Centro, S√£o Paulo - SP, CEP: 01234-567',
        '(11) 99999-8888',
        'contato@studiobeleza.com.br',
        '{"seg_sex": "09:00-18:00", "sab": "09:00-15:00", "dom": "fechado", "almoco": "12:00-13:00"}'
        )
        
        print(f"‚úÖ Neg√≥cio criado com ID: {business_id}")
        
        # ========================================
        # 3. INFORMA√á√ïES DA EMPRESA
        # ========================================
        print("\nüè¢ Criando informa√ß√µes da empresa...")
        
        await conn.execute('''
            INSERT INTO company_info (
                business_id, company_name, slogan, about_us, whatsapp_number, 
                phone_secondary, email_contact, website, street_address, city, 
                state, zip_code, country, instagram, facebook, linkedin,
                welcome_message, auto_response_enabled, business_description,
                created_at, updated_at
            ) VALUES (
                $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, now(), now()
            )
        ''',
        business_id,  # Usar o ID real retornado
        'Studio Beleza & Bem-Estar',
        'Sua beleza √© nossa paix√£o',
        'H√° mais de 10 anos cuidando da sua beleza e bem-estar com carinho e profissionalismo. Nossa equipe especializada oferece os melhores tratamentos em um ambiente aconchegante e seguro.',
        '5511999998888',
        '(11) 3333-4444',
        'contato@studiobeleza.com.br',
        'https://studiobeleza.com.br',
        'Rua das Flores, 123 - Centro',
        'S√£o Paulo',
        'SP',
        '01234-567',
        'Brasil',
        '@studiobelezasp',
        'StudioBelezaSP',
        'studio-beleza-sp',
        'Ol√°! üòä Bem-vindo(a) ao Studio Beleza & Bem-Estar! Como posso ajud√°-lo(a) hoje? Oferecemos diversos tratamentos de beleza e est√©tica. Digite "menu" para ver nossos servi√ßos ou "agendar" para marcar seu hor√°rio.',
        True,
        'Est√∫dio especializado em tratamentos est√©ticos, massagens relaxantes e cuidados com a beleza. Oferecemos servi√ßos personalizados em um ambiente aconchegante com profissionais experientes e certificados.'
        )
        
        print("‚úÖ Informa√ß√µes da empresa criadas!")
        
        # ========================================
        # 4. SERVI√áOS
        # ========================================
        print("\nüíÖ Criando servi√ßos...")
        
        services_data = [
            # Tratamentos Faciais
            ('Limpeza de Pele Profunda', 'Limpeza completa com extra√ß√£o, tonifica√ß√£o e hidrata√ß√£o. Inclui esfolia√ß√£o e m√°scara personalizada.', 90, 'R$ 80,00'),
            ('Hidrofacial Diamante', 'Tratamento premium com tecnologia de ponta. Limpeza, esfolia√ß√£o e hidrata√ß√£o profunda.', 60, 'R$ 150,00'),
            ('Peeling Qu√≠mico', 'Renova√ß√£o celular com √°cidos espec√≠ficos. Remove manchas e melhora textura da pele.', 45, 'R$ 120,00'),
            
            # Massagens
            ('Massagem Relaxante', 'Massagem corporal completa com √≥leos arom√°ticos. Al√≠vio do estresse e tens√µes.', 60, 'R$ 100,00'),
            ('Massagem Modeladora', 'T√©cnica espec√≠fica para redu√ß√£o de medidas e celulite. Estimula circula√ß√£o.', 75, 'R$ 120,00'),
            ('Drenagem Linf√°tica', 'Massagem terap√™utica para elimina√ß√£o de toxinas e reten√ß√£o de l√≠quidos.', 60, 'R$ 90,00'),
            
            # Est√©tica Corporal
            ('Criolip√≥lise', 'Tratamento n√£o invasivo para redu√ß√£o de gordura localizada atrav√©s do frio controlado.', 60, 'R$ 300,00'),
            ('Radiofrequ√™ncia', 'Estimula produ√ß√£o de col√°geno, promove firmeza e reduz flacidez.', 45, 'R$ 180,00'),
            
            # Depila√ß√£o
            ('Depila√ß√£o Pernas Completas', 'Depila√ß√£o a cera quente nas pernas completas. Inclui hidrata√ß√£o.', 45, 'R$ 60,00'),
            ('Depila√ß√£o Virilha Completa', 'Depila√ß√£o √≠ntima completa com cera especializada.', 30, 'R$ 45,00'),
            
            # Unhas
            ('Manicure Completa', 'Cuidado completo das unhas das m√£os com esmalta√ß√£o.', 45, 'R$ 35,00'),
            ('Pedicure Spa', 'Tratamento luxuoso para os p√©s com esfolia√ß√£o e hidrata√ß√£o.', 60, 'R$ 45,00'),
            
            # Cabelo
            ('Corte Feminino', 'Corte personalizado de acordo com formato do rosto.', 60, 'R$ 80,00'),
            ('Escova Progressiva', 'Alisamento e redu√ß√£o de volume. Dura at√© 4 meses.', 180, 'R$ 250,00'),
            
            # Pacotes
            ('Pacote Noiva', 'Prepara√ß√£o completa: facial, corporal, unhas e cabelo.', 240, 'R$ 450,00'),
            ('Day Spa Relax', 'Dia inteiro de relaxamento: massagem, facial e unhas.', 300, 'R$ 280,00')
        ]
        
        for name, description, duration_minutes, price in services_data:
            await conn.execute('''
                INSERT INTO services (
                    name, description, duration_minutes, price, business_id, is_active,
                    created_at, updated_at
                ) VALUES (
                    $1, $2, $3, $4, $5, true, now(), now()
                )
            ''', name, description, duration_minutes, price, business_id)
        
        print(f"‚úÖ {len(services_data)} servi√ßos criados!")
        
        # ========================================
        # 5. VERIFICA√á√ÉO FINAL
        # ========================================
        print("\nüìä VERIFICA√á√ÉO FINAL:")
        print("=" * 40)
        
        company_count = await conn.fetchval("SELECT COUNT(*) FROM company_info")
        business_count = await conn.fetchval("SELECT COUNT(*) FROM businesses") 
        services_count = await conn.fetchval("SELECT COUNT(*) FROM services")
        hours_count = await conn.fetchval("SELECT COUNT(*) FROM business_hours")
        payment_count = await conn.fetchval("SELECT COUNT(*) FROM payment_methods")
        policies_count = await conn.fetchval("SELECT COUNT(*) FROM business_policies")
        
        print(f"üè¢ Informa√ß√µes da empresa: {company_count}")
        print(f"üè™ Neg√≥cios: {business_count}")
        print(f"üíÖ Servi√ßos: {services_count}")
        print(f"üïê Hor√°rios: {hours_count}")
        print(f"üí≥ Formas de pagamento: {payment_count}")
        print(f"üìã Pol√≠ticas: {policies_count}")
        
        # Mostrar alguns servi√ßos
        print(f"\nüõ†Ô∏è SERVI√áOS POPULARES:")
        services = await conn.fetch("SELECT name, price, duration_minutes FROM services ORDER BY name LIMIT 8")
        for service in services:
            print(f"  ‚Ä¢ {service['name']}: {service['price']} ({service['duration_minutes']}min)")
        
        # Mostrar informa√ß√µes da empresa
        company = await conn.fetchrow("SELECT company_name, slogan, city FROM company_info LIMIT 1")
        if company:
            print(f"\nüè¢ EMPRESA: {company['company_name']}")
            print(f"   Slogan: {company['slogan']}")
            print(f"   Local: {company['city']}")
        
        await conn.close()
        
        print(f"\nüéâ SUCESSO TOTAL!")
        print(f"‚úÖ Banco populado com dados completos")
        print(f"‚úÖ Studio Beleza & Bem-Estar configurado")
        print(f"‚úÖ {services_count} servi√ßos dispon√≠veis")
        print(f"‚úÖ Pronto para testes e uso em produ√ß√£o!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

if __name__ == "__main__":
    result = asyncio.run(clean_and_populate())
    exit(0 if result else 1)
