# ==============================
# ULTRA-SLIM DOCKERFILE
# WhatsApp Agent - Microservice Mode
# ==============================

# Stage 1: Dependencies Builder
FROM python:3.11-alpine as builder

# Otimizações Alpine
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1

# Dependências de build para Alpine
RUN apk add --no-cache \
    gcc \
    musl-dev \
    libffi-dev \
    postgresql-dev \
    python3-dev \
    linux-headers

WORKDIR /app

# Instalar dependências
COPY requirements.txt .
RUN pip install --user -r requirements.txt

# ==============================
# Stage 2: Ultra-slim runtime
FROM python:3.11-alpine as slim-runtime

# Runtime dependencies apenas
RUN apk add --no-cache \
    libpq \
    postgresql-client \
    curl \
    ca-certificates

# Criar usuário minimalista
RUN addgroup -g 1001 -S whatsapp && \
    adduser -u 1001 -S whatsapp -G whatsapp

WORKDIR /app

# Copiar dependências Python
COPY --from=builder /root/.local /home/whatsapp/.local
ENV PATH=/home/whatsapp/.local/bin:$PATH

# Copiar apenas arquivos essenciais
COPY --chown=whatsapp:whatsapp app/ ./app/
COPY --chown=whatsapp:whatsapp manage.py ./

# Estrutura mínima
RUN mkdir -p logs tmp && \
    chown -R whatsapp:whatsapp logs tmp

# Variáveis mínimas
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

USER whatsapp

# Health check ultra-leve
HEALTHCHECK --interval=45s --timeout=5s --start-period=30s --retries=2 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

# Comando otimizado para microservice
CMD ["python", "-m", "uvicorn", "app.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "1", \
     "--access-log"]
